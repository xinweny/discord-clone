services:
  - type: web
    name: backend
    runtime: node
    rootDir: backend
    buildCommand: cd backend;  npm run build;
    startCommand: npm run start
    envVars:
      - key: NODE_ENV
        value: production
      - key: PORT
        value: 3000
      - key: CLIENT_URL
        fromService:
          type: web
          name: frontend
          property: hostport
      - key: REDIS_URL
        value: placeholder
      - key: MONGODB_URI
        value: placeholder
      - key: JWT_ACCESS_SECRET
        generateValue: true
      - key: JWT_REFRESH_SECRET
        generateValue: true
      - key: JWT_RESET_SECRET
        generateValue: true
      - key: JWT_ACCESS_EXPIRE
        value: 600s
      - key: JWT_REFRESH_EXPIRE
        value: 60d
      - key: BCRYPT_SALT
        value: placeholder
      - key: SMTP_SERVICE
        value: placeholder
      - key: SMTP_EMAIL
        value: placeholder
      - key: SMTP_PASSWORD
        value: placeholder
      - key: CLOUD_NAME
        value: placeholder
      - key: CLOUDINARY_API_KEY
        value: placeholder
      - key: CLOUDINARY_API_SECRET
        value: placeholder
      - key: LK_URL
        value: placeholder
      - key: LK_API_KEY
        value: placeholder
      - key: LK_API_SECRET
        value: placeholder
  - type: web
    name: frontend
    runtime: node
    buildCommand: cd frontend; npm run build;
    startCommand: npm run start
    envVars:
      - key: NODE_ENV
        value: production
      - key: CLIENT_URL
        fromService:
          type: web
          name: frontend
          property: hostport
      - key: API_URL
        fromService:
          type: web
          name: backend
          property: hostport
      - key: CLOUD_NAME
        value: placeholder
      - key: CLOUDINARY_API_KEY
        value: placeholder
      - key: TENOR_API_KEY
        value: placeholder
      - key: LK_URL
        value: placeholder